---

rest:
    # available log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
    log_level:      INFO

    # limiting the length of the result in /list calls (maximum number of the
    # items in the image list)
    result_limit: 20

backend:
    # available log levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
    log_level:      INFO

    # max_workers: maximum number of threads to run sbom/vscan commands
    max_workers: 8

    # DB_trigger_timeout: the backend listening for DB changes, so as soon as a
    # new image is inserted the processing starts. In case the trigger
    # doesn't work we have a timeout, so the DB is checked anyway periodically.
    DB_trigger_timeout:  300

    # docker_pull_retry_max: there is a docker pull before the SBOM scan
    # starts. If the docker pull was unsuccessful the SBOM scan is
    # skipped. Later the process will start again. After
    # docker_pull_retry_max tries the image is ignored and SBOM scanning won't
    # ever happen
    docker_pull_retry_max: 10

    # in case of a docker pull failure the image won't be tried again earlier
    # than this time limit (in minutes)
    docker_pull_retry_minutes: 120

    # run_vscan: enable/disable vulnerability scanning. When disabled only the
    # SBOMs are generated
    run_vscan: True

    # OS commands to run the scans
    command:
        # sbom command: generates and SBOM for a docker image, the output must
        # be a JSON file (on the stdout). The docker image name is available as
        # DOCKER_IMAGE environment variable
        #sbom: 'ssh another host "syft $DOCKER_IMAGE -o json"'
        sbom: 'syft $DOCKER_IMAGE -o json'

        # vscan: command for vulnerability scans. SBOM_JSON environment
        # variable provides the file name for the SBOM (generated by the sbom
        # command). This option is ignore when run_vscan is False/No
        vscan: 'grype $SBOM_JSON -o json'

